#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass jpconf
\begin_preamble
\newcommand{\maketitle}{}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Keyword Search over Data Service Integration for Accurate Results
\end_layout

\begin_layout Author
Vidmantas Zemleris
\begin_inset ERT
status open

\begin_layout Plain Layout

$^1$
\end_layout

\end_inset

, Valentin Y Kuznetsov
\begin_inset ERT
status open

\begin_layout Plain Layout

$^2$
\end_layout

\end_inset

 and Peter Kreuzer
\begin_inset ERT
status open

\begin_layout Plain Layout

$^3$
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
address{$^1$Faculty of Mathematics and Informatics, Vilnius University,
 Lithuania and CMS Experiment at CERN, Geneva, Switzerland}
\end_layout

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Digital Science and Computing Center, 
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
address{$^2$Cornell University, USA}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
address{$^3$Rheinisch-Westfaelische Tech.
 Hoch., Germany}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ead{$^1$vidmantas.zemleris@cern.ch}
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
\begin_inset Note Note
status open

\begin_layout Plain Layout
Background: 
\end_layout

\end_inset

The goal of the virtual data service integration is to provide a coherent
 interface for querying a number of heterogenous data sources (e.g., web services,
 web forms, proprietary systems, etc.) in cases where accurate results are
 necessary.
 This work explores various aspects of its usability.
\end_layout

\begin_layout Abstract
\begin_inset Note Note
status open

\begin_layout Plain Layout
Problem: 
\end_layout

\end_inset

Querying is usually carried out through a structured query language, such
 as SQL, which forces the users to learn the language and to get acquainted
 with data organization (i.e.
 the schema) thus negatively impacting the system’s usability.
 Limited access to data instances as well as users’ concern with accurate
 results of arbitrary queries present additional challenges to traditional
 approaches (such as query forms, information retrieval, keyword search
 over relational databases) making them not applicable.
\end_layout

\begin_layout Abstract
\begin_inset Note Note
status open

\begin_layout Plain Layout
Solution: 
\end_layout

\end_inset

This paper presents a keyword search system which deals with the above discussed
 problem by operating on available information: the metadata, such as the
 constraints on allowed values, analysis of user queries, and certain portions
 of data.
 Given a keyword query, it proposes a ranked list of structured queries
 along with the explanations of their meanings.
 Unlike previous implementations, the system is freely available and makes
 no assumptions about the input query, while maintaining its ability to
 leverage the query’s structural patterns - in case they exist.
 The system is discussed in the context of CMS data discovery service where
 the simplicity and capabilities of the search interface play a crucial
 role in the ability of its users to satisfy their information needs.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
In 
\emph on
Virtual Data Integration
\emph default
\lang british
 (EII), data physically stays at its origin, and is requested only on demand,
 usually, through structured query languages such as 
\emph on
SQL
\emph default
.
 EII performs a number of transformations on queries and their results (eliminat
ing the inconsistencies in data formats, naming; combining the results,
 etc.) which allows querying the sources in a coherent way.
 
\series bold
However, this 
\series default
\lang english
requires its users to learn the query language and to get acquainted with
 data organization (i.e.
 the mediated schema) thus negatively impacting the system’s usability
\lang british
.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\lang british
is the most beneficial when other data
\color blue
 
\color inherit
integration techniques are not applicable
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang british
for instance, publish-subscribe approach is not applicable in the presence
 of proprietary (and reluctant to change) systems, data-warehousing is too
 heavy and complex then large portions of data are volatile or when only
 limited interfaces are provided by proprietary services.
\end_layout

\end_inset

.
 
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\lang british
Among the alternatives to structured queries are: 1) interfaces based on
 regular forms
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout

\lang british
?
\end_layout

\end_inset

, that are impractical for complex queries over large number of entities/attribu
tes; 2) the keyword search based on metadata returning query results directly,
 risking that the query interpretation chosen is not the correct one, as
 the keyword queries are ambiguous; or 3) the keyword search based on metadata
 and proposing a list of structured queries for user to choose from.
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang british
The objective of this work is to investigate the keyword search proposing
 a ranked list of queries, as a more intuitive alternative, which, in fact,
 received relatively little attention in the field of data 
\series bold
(service)
\series default
 integration
\begin_inset CommandInset citation
LatexCommand citep
key "nl_to_dataservices_guerrisi2012natural"

\end_inset

.
 
\end_layout

\begin_layout Standard

\lang british
Virtual integration presents an additional challenge, since only limited
 access to the data instances is available, rendering the traditional methods
 that return data-tuples
\series bold
 
\series default
inapplicable (e.g.
 Information Retrieval or Keyword search over relational databases).
\end_layout

\begin_layout Standard

\lang british
Building on the experience gained while working on an EII system
\series bold
 
\series default
at the 
\emph on
CMS Experiment
\emph default

\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CMS"
description "The Compact Moun Selenoid Experiment at the European Organization for Nuclear Research (CERN)"

\end_inset

 at 
\emph on
CERN
\emph default
, 
\color red
we will focus on the implementation of keyword search, also touching and
 the mechanisms for user feedback and some
\series bold
 
\series default
more distant topics such as usability and performance of an EII.
\end_layout

\begin_layout Subsection
The Data Aggregation System
\end_layout

\begin_layout Standard

\lang british
The
\emph on
 
\begin_inset Quotes eld
\end_inset

CMS Data Aggregation System
\begin_inset Quotes erd
\end_inset

 (DAS
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "DAS"
description "CMS Data Aggregation System - The EII system used at CMS"

\end_inset

) 
\begin_inset CommandInset citation
LatexCommand citep
key "Kuznetsov2010,Kuznetsov2011"

\end_inset

 
\emph default
allows integrated access to a number of proprietary data-sources through
 simple structured queries eliminating the inconsistencies in entity naming,
 data formats and combining the results.
 It uses the 
\emph on
Boolean Retrieval Model
\emph default
 as users are often interested in retrieving ALL the items matching their
 query.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\lang british
The queries are executed either from web browser or through a command line
 interface (feeding the results into users' applications).
 
\end_layout

\end_inset


\series bold

\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\series bold
\lang british
Query language (DASQL) and its execution
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang british
The queries are formed specifying the entity the user is interested in (e.g.
 dataset, file, etc) and providing selection criteria (e.g.
 attribute=value, attribute 
\emph on
between
\emph default
 [v1, v2]).
 The results could be later 'piped' for further filtering, sorting or aggregatio
n (min, max, avg, sum, count, median), e.g.: 
\end_layout

\begin_layout Standard

\lang british
\begin_inset Graphics
	filename figures/DASQL_structure.pdf
	width 75text%

\end_inset


\end_layout

\begin_layout Standard

\lang british
As seen above, DASQL closely corresponds to the physical execution flow
\begin_inset Note Note
status open

\begin_layout Plain Layout

\lang british
 over the EII
\end_layout

\end_inset

: based on the requested entity and the conditions on service inputs, DAS
 decides the set of services to be queried
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\lang british
including pre-defined 
\begin_inset Quotes eld
\end_inset

virtual services
\begin_inset Quotes erd
\end_inset

, which feed results from one service into inputs of the others
\end_layout

\end_inset

.
 Then, after retrieving, processing and merging the results from services,
 the filters and projections, and aggregators are applied.
\color magenta

\begin_inset Note Note
status collapsed

\begin_layout Plain Layout

\color magenta
\lang british
In between there could be additional operations, such as 
\emph on
unique
\emph default
 for selecting only unique records, or custom map-reduce processing steps.
 
\end_layout

\end_inset


\color inherit
 The results are cached for subsequent uses.
 
\end_layout

\begin_layout Section
From Keywords to Queries
\end_layout

\begin_layout Subsection
Tokenization
\end_layout

\begin_layout Subsection
Scoring individual keywords (entry points)
\end_layout

\begin_layout Subsection
Ranking function
\end_layout

\begin_layout Section
Generating the results
\end_layout

\begin_layout Subsection
via Exhaustive search
\end_layout

\begin_layout Standard
allows filtering only those that DIS supports.
\end_layout

\begin_layout Subsection
via Solving weighted-bipartite assignments
\end_layout

\begin_layout Subsection
Combination(?)
\end_layout

\begin_layout Standard
exhaustive for part that is well
\end_layout

\begin_layout Section
Our implementation
\end_layout

\begin_layout Standard
cython
\end_layout

\begin_layout Section
Future work
\end_layout

\begin_layout Section
Related work
\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Section*
References
\end_layout

\begin_layout Standard

\lang british
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "refs"
options "iopart-num"

\end_inset


\end_layout

\end_body
\end_document
